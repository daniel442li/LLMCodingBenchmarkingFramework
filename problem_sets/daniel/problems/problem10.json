{
    "identifier": "problem_semaphore",
    "description": "Write a function that demonstrates the use of a Semaphore to limit the number of threads running a particular function at the same time.",
    "function_prototype": {
        "function_name": "limit_threads",
        "parameters": [
            {
                "name": "function",
                "type": "Function"
            },
            {
                "name": "max_threads",
                "type": "int"
            }
        ],
        "return_values": [
            {
                "type": "void"
            }
        ]
    },
    "tags": [
        "Concurrency",
        "Semaphore",
        "Threads",
        "Intermediate"
    ],
    "correctness_test_suite": [
        {
            "input": {
                "var": "Semaphore"
            },
            "expected_output": [
                "import java.util.concurrent.Semaphore;",
                "public class Main {",
                "  private static final int MAX_CONCURRENT_THREADS = 2;",
                "  private static final Semaphore semaphore = new Semaphore(MAX_CONCURRENT_THREADS);",
                "  public static void main(String[] args) {",
                "    for (int i = 0; i < 10; i++) {",
                "      new Thread(Main::limitedFunction).start();",
                "    }",
                "  }",
                "  private static void limitedFunction() {",
                "    try {",
                "      semaphore.acquire();",
                "      System.out.println(\"Thread \" + Thread.currentThread().getId() + \" is running\");",
                "      Thread.sleep(2000);",
                "    } catch (InterruptedException e) {",
                "      e.printStackTrace();",
                "    } finally {",
                "      semaphore.release();",
                "    }",
                "  }",
                "}"
            ]
        }
    ],
    "prompts": [
        {
            "prompt_id": "semaphore_limit_threads",
            "prompt": "Write a function that demonstrates the use of a Semaphore to limit the number of threads running a particular function at the same time.",
            "genericize": true,
            "sample_inputs_outputs": [
                {
                    "input": {
                        "var": "function_to_limit"
                    },
                    "expected_output": "Semaphore-limited function"
                },
                {
                    "input": {
                        "var": "another_function_to_limit"
                    },
                    "expected_output": "Semaphore-limited another function"
                }
            ]
        }
    ]
}